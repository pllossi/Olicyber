import sympy as sp
import hashlib

def main():
    # Definizione del numero N
    N = 115562352485561032060492039891121716550780298338103887552727636854507966397297661571103692796981504393840901
    
    # 1. Fattorizzazione di N
    factors_N = sp.factorint(N)  # Usa la funzione factorint per ottenere i fattori primi
    ans1 = factors_N
    print("Fattori di N:", ans1)
    
    # 2. Somma dei divisori distinti a due a due
    divisors = sp.divisors(N)
    sum_divisors = sum(divisors) - N  # Escludiamo N stesso
    ans2 = sum_divisors
    print("Somma dei divisori distinti:", ans2)
    
    # Definizione dei polinomi
    x, y, z = sp.symbols('x y z')
    pol1 = (
        3*x**8*y**20*z**22 - 6*x**14*y**16*z**19 + x**3*y**20*z**23 - 2*x**9*y**16*z**20
        - 3*x**7*y**20*z**17 - 3*x**12*y**10*z**20 + 6*x**18*y**6*z**17 - x**2*y**20*z**18
        - x**7*y**10*z**21 + 2*x**13*y**6*z**18 + 3*x**11*y**10*z**15 + x**6*y**10*z**16
    )
    
    # 3. Fattorizzazione di pol1 in Z[x, y, z]
    factored_pol1 = sp.factor(pol1)
    ans3 = factored_pol1
    print("Fattorizzazione di pol1:", ans3)
    
    # 4. Definizione di pol2 e pol3
    pol2 = sp.poly(
        96282968693199378612620657496531395238062854267416785769892810279581114080886331694029430818620691344975031*x**20 +
        49724244652126958463052030288606098491675196767447384169499844060229072636921770492157673134942311588983700*x**19 +
        99925851504102267917936523001683527097256147290115954427464066098384650582929354903387348743199493089583591*x**18 +
        44637808644667939776632890954594781591364385577657273239488479857280193632735804116541218214220655799087878*x**17 +
        37241674745583430286444331690048638507172367337331687512683030840146074437700928913272852684572117713709425*x**16 +
        3401852462908679628484998036474510600452064756695644696971258738094014633067354656071803281968956376835073*x**15 +
        93479598911461415675632416366093709981985170461356865125975084700683170408266004012345678920508327696426721*x**14 +
        58445961978282241491382218316271776559850115693526701684006095006236329770645431995697872671678894389367347*x**13 +
        7740445054400030630179580354335889323963233238574035376923674694851212532508346011454083834061864035423505*x**12 +
        39951817357934807606522019485064289032263139743346444901688397675617488528704326960326063650829578316982358*x**11 +
        95518650748905516824711294616070160160408765643814857614995964357696925717363843904870255880003368893739626*x**10 +
        33840830296791685244991091974048562008281820720047391410046609176611147568632212710306695691757446399359326*x**9 +
        67575476495664320492605955802527533498363583026454910904889627165651870160439587173466656289655008131991628*x**8 +
        94767680247812960532591623372545498848145915526305265393910624080821923821312491404886351604670007336919229*x**7 +
        17128287737294033506216971743714672592340474862251842767736279732636013393300176185985359911937597423991781*x**6 +
        71058236810239615009802169953347382955195284068061748586259495318824688171425585233324788676814098042780618*x**5 +
        78009736557879383158962846791320985630962899074214342149779356497892765893798764343254215797964608867779233*x**4 +
        42031788223871165450733861840401273643239533206445063251621372446481599583043741911683904618918804268222746*x**3 +
        64197674987684118435293124478457577684195224137725264152258081642643853658232811226240437662261688519681660*x**2 +
        52002351299374656375907942415544129315495063265014164845948777368801196697388549548459288453739497121899799*x +
        103083623103444976305109679628810718701595361758309293600367245461722916099625332442144506094890679521744403,
        x, domain='ZZ')
    
    pol3 = sp.poly(
        29713774661318425150937452414500521557610124208545026290216258423888330013328697089106011620711069798173115*x**18 +
        84641590273263050356751947874343000634049706471406163401163977389467416147484369772169947742593138259567019*x**17 +
        69384036233543933852317705273266420209467758339018551394439169979699111506818737815446302313531312858358125*x**16 +
        45409048572120624405621695947663268386151245933838909713336695778078934429966161780473206621866755650639813*x**15 +
        107832327881680039007761773485633484147184967687056775539077737395563134422121480515027411797013554787913224*x**14 +
        83582254119577830795660383075600228391262661217022668517112888741823410356267289961803829147693873522581230*x**13 +
        108909346047151447466887497688675948996028867618436487289380506938667263925971498721805269446592018491780876*x**12,
        x, domain='ZZ')
    
    # Calcolo del GCD tra pol2 e pol3 modulo N
    gcd_pol = sp.gcd(pol2.set_modulus(N), pol3.set_modulus(N))
    monic_gcd = gcd_pol.monic()
    ans4 = monic_gcd
    print("GCD monico di pol2 e pol3 modulo N:", ans4)
    
    # 5. Calcolo dell'hash SHA-256
    hash_input = str(ans1) + str(ans2) + str(ans3) + str(ans4)
    sha256_hash = hashlib.sha256(hash_input.encode()).hexdigest()
    
    print("SHA-256 finale:", sha256_hash[:32])

if __name__ == "__main__":
    main()
